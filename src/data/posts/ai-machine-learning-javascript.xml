<?xml version="1.0" encoding="UTF-8"?>
<post>
  <title>AI та машинне навчання в JavaScript</title>
  <author>Дмитро Сидоренко</author>
  <date>2024-02-10</date>
  <content>
    <![CDATA[
Машинне навчання перестало бути ексклюзивною областю Python. JavaScript пропонує потужні інструменти для AI прямо у браузері.

## TensorFlow.js - ML у браузері:

TensorFlow.js дозволяє запускати моделі машинного навчання безпосередньо в браузері або Node.js.

```javascript
import * as tf from '@tensorflow/tfjs';

// Створення простої нейронної мережі
const model = tf.sequential({
  layers: [
    tf.layers.dense({inputShape: [1], units: 1}),
    tf.layers.dense({units: 50, activation: 'relu'}),
    tf.layers.dense({units: 1})
  ]
});

// Компіляція моделі
model.compile({
  optimizer: 'adam',
  loss: 'meanSquaredError'
});

// Навчання на даних
const xs = tf.tensor2d([[1], [2], [3], [4]], [4, 1]);
const ys = tf.tensor2d([[2], [4], [6], [8]], [4, 1]);

await model.fit(xs, ys, {epochs: 100});

// Прогнозування
const prediction = model.predict(tf.tensor2d([[5]], [1, 1]));
prediction.print(); // Очікуємо ~10
```

## Розпізнавання зображень:

```javascript
import '@tensorflow/tfjs-backend-webgl';
import * as mobilenet from '@tensorflow-models/mobilenet';

async function classifyImage() {
  // Завантажити попередньо навчену модель
  const model = await mobilenet.load();
  
  // Отримати зображення з canvas або img елемента
  const img = document.getElementById('image');
  
  // Класифікувати зображення
  const predictions = await model.classify(img);
  
  predictions.forEach(prediction => {
    console.log(`${prediction.className}: ${prediction.probability.toFixed(3)}`);
  });
}
```

## Обробка природної мови:

```javascript
import * as use from '@tensorflow-models/universal-sentence-encoder';

async function similarityAnalysis() {
  const model = await use.load();
  
  const sentences = [
    'Привіт, як справи?',
    'Вітаю, як дела?',
    'Сьогодні гарна погода',
  ];
  
  // Отримати embeddings для речень
  const embeddings = await model.embed(sentences);
  
  // Обчислити косинусну подібність
  const similarity = tf.matMul(embeddings, embeddings.transpose());
  similarity.print();
}
```

## ML5.js для творчості:

```javascript
// Генерація тексту з RNN
let lstm;
let textInput = "Якось ";

function setup() {
  lstm = ml5.charRNN('./models/shakespeare', modelReady);
}

function modelReady() {
  console.log('Model ready!');
  generateText();
}

function generateText() {
  lstm.generate({
    seed: textInput,
    length: 100,
    temperature: 0.5
  }, (err, results) => {
    console.log(results.sample);
  });
}
```

## WebGL для прискорення:

```javascript
// Використання GPU для обчислень
import * as tf from '@tensorflow/tfjs';
import '@tensorflow/tfjs-backend-webgl';

// Переконатися що використовується WebGL backend
await tf.ready();
console.log('Backend:', tf.getBackend()); // webgl

// Операції виконуються на GPU
const a = tf.randomNormal([1000, 1000]);
const b = tf.randomNormal([1000, 1000]);
const c = tf.matMul(a, b); // GPU-прискорене множення матриць
```

## Популярні бібліотеки:

- **TensorFlow.js** - повнофункціональна ML бібліотека
- **ML5.js** - дружня до митців ML бібліотека
- **Brain.js** - проста нейронна мережа
- **Synaptic.js** - архітектурно-агностичні нейронні мережі

JavaScript робить машинне навчання доступним для веб-розробників!
    ]]>
  </content>
</post>
